version: 2.1

workflows:
    sylius1.11-php8.0:
        jobs:
            -   build:
                    name: php-<<matrix.php_version>>-sylius-<< matrix.sylius_version >>-symfony-<< matrix.symfony_version >>
                    matrix:
                        parameters:
                            sylius_version: [ "1.11" ]
                            php_version: [ "8.0" ]
                            symfony_version: [ "5.4" ]
#    sylius1.11-php8.1+:
#        jobs:
#            - build:
#                  name: php-<<matrix.php_version>>-sylius-<< matrix.sylius_version >>-symfony-<< matrix.symfony_version >>
#                  matrix:
#                      parameters:
#                          sylius_version: [ "1.11" ]
#                          php_version: [ "8.1", "8.2", "8.3" ]
#                          symfony_version: [ "5.4" ]
#    sylius1.12-php8.0:
#        jobs:
#            -   build:
#                    name: php-<<matrix.php_version>>-sylius-<< matrix.sylius_version >>-symfony-<< matrix.symfony_version >>
#                    matrix:
#                        parameters:
#                            sylius_version: [ "1.12" ]
#                            php_version: [ "8.0" ]
#                            symfony_version: [ "5.4", "6.0" ]
#    sylius1.12-php8.1+:
#        jobs:
#            -   build:
#                    name: php-<<matrix.php_version>>-sylius-<< matrix.sylius_version >>-symfony-<< matrix.symfony_version >>
#                    matrix:
#                        parameters:
#                            sylius_version: [ "1.12" ]
#                            php_version: [ "8.1", "8.2", "8.3" ]
#                            symfony_version: [ "5.4", "6.0", "6.1", "6.2", "6.3", "6.4" ]

jobs:
    build:
        parameters:
            sylius_version:
                type: string
            symfony_version:
                type: string
            php_version:
                type: string
        docker:
            -   image: webdevops/php-nginx:<< parameters.php_version >>
                environment:
                    - DATABASE_URL=mysql://root:pass_root@127.0.0.1:3306/3brs_sylius_payment_restriction_plugin_%kernel.environment%?serverVersion=8.0
            -   image: cimg/mysql:8.0
                environment:
                    MYSQL_ROOT_PASSWORD: pass_root
                    MYSQL_USER: sylius
                    MYSQL_PASSWORD: pass
            -   image: zenika/alpine-chrome
                command: "--enable-automation --disable-gpu --disable-background-networking --no-default-browser-check --no-first-run --disable-popup-blocking --disable-default-apps --disable-translate --disable-extensions --no-sandbox --headless --remote-debugging-port=9222 --remote-debugging-address=0.0.0.0 --window-size=2880,1800 --proxy-server='direct://' --proxy-bypass-list='*' --disable-proxy-certificate-handler"

        steps:
            - checkout
            # to avoid installing different package "Note, selecting 'cmdtest' instead of 'yarn'"
            -   run: curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
            -   run: echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
            -   run: curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
            -   run: apt-get update
                # netcat to get 'nc' command for waiting for database
            -   run: apt-get install -y nodejs yarn mariadb-client netcat-traditional
            -   run: composer self-update
            -   run: curl -sS https://get.symfony.com/cli/installer | bash -s -- --install-dir="$(pwd)" && mv "$(pwd)"/symfony /usr/local/bin/symfony
            -   run: symfony server:ca:install

            # Sylius & Symfony in current matrix versions
            -   run: composer require "sylius/sylius:<< parameters.sylius_version >>.*" --no-interaction --no-update --no-scripts
            -   run: grep -o -E '"(symfony/[^"]+)"' composer.json | grep -v -E '(symfony/flex|symfony/webpack-encore-bundle)' | xargs printf '%s:<< parameters.symfony_version >>.* '| xargs composer require --no-interaction --no-update

            -   run:
                    name: Wait for database
                    command: timeout 60s bash -c -- 'while ! nc -z 127.0.0.1 3306; do sleep 0.1; done' \
                        && timeout 30s bash -c -- 'mysql --user=sylius --password=pass --host=127.0.0.1 --port=3306 -e "exit"'

            -   run:
                    name: Wait for Chrome
                    command: timeout 60s bash -c -- 'while ! nc -z 127.0.0.1 9222; do sleep 0.1; done'

            # COMPOSER PREFER LOWEST (oldest possible) #
            # has to delete vendor for next test with different libraries version to avoid Composer error 'Failed to extract...' if vendor dir cache does not exist
            -   run: rm -fr vendor composer.lock
            -   run: composer update --no-interaction --prefer-lowest --no-plugins
            -   run: yarn --cwd tests/Application install
            -   run: yarn --cwd tests/Application build
            -   run: (cd tests/Application && bin/console cache:clear --env=test -vvv)
            -   run: (cd tests/Application && bin/console cache:warmup --env=test -vvv)
            -   run: (cd tests/Application && bin/console doctrine:database:create --if-not-exists --env=test -vvv)
            -   run: (cd tests/Application && bin/console doctrine:schema:update --force --complete --no-interaction --env=test -vvv)
            -   run: (cd tests/Application && bin/console doctrine:migrations:sync-metadata-storage --no-interaction --env=test -vvv)
            -   run:
                    name: Behat
                    environment:
                        # Circle CI forces all containers to be on localhost only, does not support hostnames
                        BEHAT_PARAMS: |
                            {
                                "extensions": {
                                    "Behat\\MinkExtension": {
                                        "base_url": "https://localhost:8081/",
                                        "sessions": {
                                            "chrome_headless": {
                                                "chrome": {
                                                    "api_url": "http://localhost:9222"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        APP_ENV: test
                        APP_SUPPRESS_DEPRECATED_ERRORS: 1
                    # suppress deprecation errors like 'Function utf8_encode() is deprecated in vendor/egulias/email-validator/src/EmailLexer.php line 275' converted to fatal
                    command: bin/behat-js -vvv
            -   run: APP_ENV=test bin/phpstan.sh
            -   run: APP_ENV=test bin/ecs.sh --clear-cache
            -   run: APP_ENV=test bin/symfony-lint.sh

            # COMPOSER PREFER DIST #
            -   run: composer update --no-interaction --prefer-dist --no-plugins
            -   run: yarn --cwd tests/Application install
            -   run: yarn --cwd tests/Application build
            -   run: (cd tests/Application && bin/console doctrine:database:create --if-not-exists --env=test -vvv)
            -   run: (cd tests/Application && bin/console doctrine:schema:update --force --complete --no-interaction --env=test -vvv)
            -   run: (cd tests/Application && bin/console cache:clear --env=test -vvv)
            -   run: (cd tests/Application && bin/console cache:warmup --env=test -vvv)
            -   run:
                    name:
                    environment:
                        APP_ENV: test
                        # Circle CI forces all containers to be on localhost only, does not support hostnames
                        BEHAT_PARAMS: |
                            {
                                "extensions": {
                                    "Behat\\MinkExtension": {
                                        "base_url": "https://localhost:8081/",
                                        "sessions": {
                                            "chrome_headless": {
                                                "chrome": {
                                                    "api_url": "http://localhost:9222"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                    command: bin/behat-js -vvv
            -   run: APP_ENV=test bin/phpstan.sh
            -   run: APP_ENV=test bin/ecs.sh --clear-cache
            -   run: APP_ENV=test bin/symfony-lint.sh
