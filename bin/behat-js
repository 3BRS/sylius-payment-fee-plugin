#!/usr/bin/env bash

DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"

if command -v symfony &>/dev/null; then
  SYMFONY_BIN='symfony'
else
  if [ ! -e "${DIR}/symfony" ]; then # -e detects both regular file and symlink
    # download symfony
    curl -sS https://get.symfony.com/cli/installer | bash -s -- --install-dir="${DIR}"
  fi
  SYMFONY_BIN="${DIR}/symfony"
fi

SUDO=''
if command -v sudo &>/dev/null; then
  # symfony requires root privileges to generate certificate, and same (root) user is required to use that certificate
  SUDO='sudo --preserve-env'
fi

export APP_ENV=test

BEHAT_APP_PORT=${BEHAT_APP_PORT:=8081}

${SUDO} "${SYMFONY_BIN}" server:stop --dir="${DIR}"/../tests/Application/public 1>/dev/null

SYMFONY_SERVER_START_COMMAND="${SUDO} ${SYMFONY_BIN} server:start --port=${BEHAT_APP_PORT} --dir=${DIR}/../tests/Application/public --daemon"

SYMFONY_SERVER_START_OUTPUT=$(bash -c "$SYMFONY_SERVER_START_COMMAND" 2>&1)

SYMFONY_SERVER_CA_WARNING=$(echo "${SYMFONY_SERVER_START_OUTPUT}" | grep "WARNING" | grep --only-matching "server:ca:install")

SYMFONY_SERVER_RUNNING_WARNING=$(echo "${SYMFONY_SERVER_START_OUTPUT}" | grep "WARNING" | grep --only-matching "already running")
SYMFONY_SERVER_RUNNING_ON_HTTP_WARNING=''
if [ -n "${SYMFONY_SERVER_RUNNING_WARNING}" ]; then
  SYMFONY_SERVER_RUNNING_ON_HTTP_WARNING=$(echo "${SYMFONY_SERVER_START_OUTPUT}" | grep "Listening on" | grep --only-matching "http://")
fi

if [ -z "${SYMFONY_SERVER_CA_WARNING}" ] && [ -z "${SYMFONY_SERVER_RUNNING_ON_HTTP_WARNING}" ]; then
  echo "${SYMFONY_SERVER_START_OUTPUT}"
else
  # sudoers in Docker allows sudo without password for ./bin/symfony
  ${SUDO} "${SYMFONY_BIN}" server:ca:install

  ${SUDO} "${SYMFONY_BIN}" server:stop --dir="${DIR}"/../tests/Application/public 1>/dev/null

  ${SYMFONY_SERVER_START_COMMAND}
fi

"${DIR}/behat" "$@"
